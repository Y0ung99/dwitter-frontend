{"version":3,"sources":["components/Header.jsx","components/Banner.jsx","components/NewTweetForm.jsx","util/date.js","components/Avatar.jsx","components/EditTweetForm.jsx","components/TweetCard.jsx","pages/Login.jsx","context/AuthContext.jsx","components/Tweets.jsx","pages/AllTweets.jsx","pages/MyTweets.jsx","App.jsx","service/auth.js","service/tweet.js","network/http.js","db/token.js","network/socket.js","index.js"],"names":["Header","memo","username","onLogout","onMyTweets","onAllTweets","className","src","alt","onClick","Banner","text","isAlert","NewTweetForm","tweetService","onError","useState","tweet","setTweet","onSubmit","event","a","preventDefault","postTweet","then","created","catch","type","placeholder","value","required","autoFocus","onChange","target","parseDate","tdate","Date","parse","now","diff","Math","floor","round","month","toLocaleDateString","getDate","Avatar","url","name","charAt","EditTweetForm","onUpdate","onClose","setText","id","TweetCard","owner","onDelete","onUsernameClick","createdAt","editing","setEditing","Login","onSignUp","onLogin","signup","setSignup","setUsername","password","setPassword","setName","email","setEmail","setURL","setIsAlert","setError","error","toString","checked","htmlFor","AuthContext","createContext","contextRef","createRef","AuthProvider","authService","authErrorEventBus","children","undefined","user","setUser","useImperativeHandle","token","useEffect","listen","err","console","log","me","signUp","useCallback","logIn","login","logout","context","useMemo","Provider","AuthErrorEventBus","callback","this","useAuth","useContext","Tweets","addable","tweets","setTweets","history","useHistory","getTweets","stopSync","onSync","onCreated","tweetId","deleteTweet","filter","updateTweet","updated","map","item","push","setTimeout","transient","length","AllTweets","MyTweets","useParams","App","window","confirm","exact","path","AuthService","http","tokenStorage","fetch","method","body","JSON","stringify","response","saveToken","getToken","headers","Authorization","clearToken","TweetService","socket","query","getHeaders","HttpClient","baseURL","options","json","data","status","message","Error","notify","TOKEN","TokenStorage","localStorage","setItem","getItem","clear","Socket","getAcessToken","io","auth","cb","on","connected","connect","off","process","httpClient","socketClient","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAuBeA,EArBAC,gBAAK,YAAsD,IAAnDC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YACrD,OACE,yBAAQC,UAAU,SAAlB,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKC,IAAI,iBAAiBC,IAAI,eAAeF,UAAU,aACvD,oBAAIA,UAAU,YAAd,qBACCJ,GAAY,uBAAMI,UAAU,YAAhB,cAA8BJ,QAE5CA,GACC,sBAAKI,UAAU,OAAf,UACE,wBAAQG,QAASJ,EAAjB,wBACA,wBAAQI,QAASL,EAAjB,uBACA,wBAAQE,UAAU,YAAYG,QAASN,EAAvC,6B,eCHKO,EATAT,gBAAK,gBAAGU,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OAClB,mCACGD,GACC,mBAAGL,UAAS,iBAAYM,EAAU,aAAe,gBAAjD,SACGD,S,uBC+BME,EAnCM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAAc,EACxBC,mBAAS,IADe,mBAC3CC,EAD2C,KACpCC,EADoC,KAG5CC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACfD,EAAME,iBACNR,EACGS,UAAUN,GACVO,MAAK,SAACC,GACLP,EAAS,OAEVQ,MAAMX,GAPM,2CAAH,sDAcd,OACE,uBAAMT,UAAU,aAAaa,SAAUA,EAAvC,UACE,uBACEQ,KAAK,OACLC,YAAY,kBACZC,MAAOZ,EACPa,UAAQ,EACRC,WAAS,EACTC,SAZW,SAACZ,GAChBF,EAASE,EAAMa,OAAOJ,QAYlBvB,UAAU,2BAEZ,wBAAQqB,KAAK,SAASrB,UAAU,WAAhC,sBC9BS,SAAS4B,EAAUC,GAChC,IAAMV,EAAU,IAAIW,KAAKA,KAAKC,MAAMF,IAC9BG,EAAM,IAAIF,KACVG,EAAOC,KAAKC,OAAOH,EAAMb,GAAW,KAC1C,GAAIc,GAAQ,EACV,MAAO,WAET,GAAIA,EAAO,GACT,OAAOA,EAAO,eAEhB,GAAIA,EAAO,GACT,MAAO,oBAET,GAAIA,EAAO,GACT,MAAO,yBAET,GAAIA,GAAQ,GACV,MAAO,iBAET,GAAIA,GAAQ,KACV,OAAOC,KAAKE,MAAMH,EAAO,IAAM,eAEjC,GAAIA,GAAQ,KACV,MAAO,aAET,GAAIA,GAAQ,MACV,OAAOC,KAAKE,MAAMH,EAAO,MAAQ,aAEnC,GAAIA,GAAQ,OACV,MAAO,YAET,GAAIA,EAAO,OACT,OAAOC,KAAKE,MAAMH,EAAO,OAAS,YAEpC,GAAIA,GAAQ,OACV,MAAO,aAET,IAAMI,EAAQlB,EAAQmB,mBAAmB,UAAW,CAAED,MAAO,SAC7D,MAAM,MAAN,OAAaA,EAAb,YAAsBlB,EAAQoB,WCpChC,IAUeC,EAVA7C,gBAAK,gBAAG8C,EAAH,EAAGA,IAAKC,EAAR,EAAQA,KAAR,OAClB,8BACKD,EACD,qBAAKxC,IAAKwC,EAAKvC,IAAI,SAASF,UAAU,eAEtC,qBAAKA,UAAU,aAAf,SAA6B0C,EAAKC,OAAO,UC+BhCC,EApCO,SAAC,GAAkC,IAAhCjC,EAA+B,EAA/BA,MAAOkC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EAC9BpC,mBAASC,EAAMN,MADe,mBAC/CA,EAD+C,KACzC0C,EADyC,KAGhDlC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACfD,EAAME,iBACN6B,EAASlC,EAAMqC,GAAI3C,GACnByC,IAHe,2CAAH,sDAUd,OACE,uBAAM9C,UAAU,kBAAkBa,SAAUA,EAA5C,UACE,uBACEQ,KAAK,OACLC,YAAY,kBACZC,MAAOlB,EACPmB,UAAQ,EACRC,WAAS,EACTC,SAZW,SAACZ,GAChBiC,EAAQjC,EAAMa,OAAOJ,QAYjBvB,UAAU,2BAEZ,sBAAKA,UAAU,yBAAf,UACE,wBAAQqB,KAAK,SAASrB,UAAU,kBAAhC,oBAGA,wBAAQqB,KAAK,SAASrB,UAAU,kBAAkBG,QAAS2C,EAA3D,2BCqBOG,EA9CGtD,gBAChB,YAA4D,IAAzDgB,EAAwD,EAAxDA,MAAOuC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,SAAUN,EAAgC,EAAhCA,SAAUO,EAAsB,EAAtBA,gBAC3BJ,EAA6CrC,EAA7CqC,GAAIpD,EAAyCe,EAAzCf,SAAU8C,EAA+B/B,EAA/B+B,KAAMD,EAAyB9B,EAAzB8B,IAAKpC,EAAoBM,EAApBN,KAAMgD,EAAc1C,EAAd0C,UADkB,EAE3B3C,oBAAS,GAFkB,mBAElD4C,EAFkD,KAEzCC,EAFyC,KAKzD,OACE,qBAAIvD,UAAU,QAAd,UACE,0BAASA,UAAU,kBAAnB,UACE,cAAC,EAAD,CAAQyC,IAAKA,EAAKC,KAAMA,IACxB,sBAAK1C,UAAU,aAAf,UACE,sBAAMA,UAAU,aAAhB,SAA8B0C,IAC9B,uBACE1C,UAAU,iBACVG,QAAS,kBAAMiD,EAAgBzC,IAFjC,cAIIf,KAEJ,uBAAMI,UAAU,aAAhB,mBAAiC4B,EAAUyB,MAC3C,4BAAIhD,IACHiD,GACC,cAAC,EAAD,CACE3C,MAAOA,EACPkC,SAAUA,EACVC,QApBI,kBAAMS,GAAW,YAyB5BL,GACC,sBAAKlD,UAAU,eAAf,UACE,wBAAQA,UAAU,mBAAmBG,QAAS,kBAAMgD,EAASH,IAA7D,eAGA,wBACEhD,UAAU,mBACVG,QAAS,kBAAMoD,GAAW,IAF5B,6B,cCgFGC,EApHD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACXhD,oBAAS,GADE,mBAChCiD,EADgC,KACxBC,EADwB,OAEPlD,mBAAS,IAFF,mBAEhCd,EAFgC,KAEtBiE,EAFsB,OAGPnD,mBAAS,IAHF,mBAGhCoD,EAHgC,KAGtBC,EAHsB,OAIfrD,mBAAS,IAJM,mBAIhCgC,EAJgC,KAI1BsB,EAJ0B,OAKbtD,mBAAS,IALI,mBAKhCuD,EALgC,KAKzBC,EALyB,OAMjBxD,mBAAS,IANQ,mBAMhC+B,EANgC,KAM3B0B,EAN2B,OAOfzD,mBAAS,IAPM,mBAOhCL,EAPgC,KAO1B0C,EAP0B,OAQTrC,oBAAS,GARA,mBAQhCJ,EARgC,KAQvB8D,EARuB,KAmBjCC,EAAW,SAACC,GAChBvB,EAAQuB,EAAMC,YACdH,GAAW,IAGP1C,EAAW,SAACZ,GAAW,IAAD,EAGtBA,EADFa,OAAUe,EAFc,EAEdA,KAAMnB,EAFQ,EAERA,MAAOiD,EAFC,EAEDA,QAEzB,OAAQ9B,GACN,IAAK,WACH,OAAOmB,EAAYtC,GACrB,IAAK,WACH,OAAOwC,EAAYxC,GACrB,IAAK,OACH,OAAOyC,EAAQzC,GACjB,IAAK,QACH,OAAO2C,EAAS3C,GAClB,IAAK,MACH,OAAO4C,EAAO5C,GAChB,IAAK,SACH,OAAOqC,EAAUY,KAKvB,OACE,qCACE,cAAC,EAAD,CAAQnE,KAAMA,EAAMC,QAASA,IAC7B,uBAAMN,UAAU,YAAYa,SAtCf,SAACC,GAChBA,EAAME,iBACF2C,EACFF,EAAS7D,EAAUkE,EAAUpB,EAAMuB,EAAOxB,GAAKrB,MAAMiD,GAErDX,EAAQ9D,EAAUkE,GAAU1C,MAAMiD,IAiClC,UACE,uBACE3B,KAAK,WACLrB,KAAK,OACLC,YAAY,KACZC,MAAO3B,EACP8B,SAAUA,EACV1B,UAAU,aACVwB,UAAQ,IAEV,uBACEkB,KAAK,WACLrB,KAAK,WACLC,YAAY,WACZC,MAAOuC,EACP9D,UAAU,aACV0B,SAAUA,IAEXiC,GACC,uBACEjB,KAAK,OACLrB,KAAK,OACLC,YAAY,OACZC,MAAOmB,EACPhB,SAAUA,EACV1B,UAAU,aACVwB,UAAQ,IAGXmC,GACC,uBACEjB,KAAK,QACLrB,KAAK,QACLC,YAAY,QACZC,MAAO0C,EACPvC,SAAUA,EACV1B,UAAU,aACVwB,UAAQ,IAGXmC,GACC,uBACEjB,KAAK,MACLrB,KAAK,MACLC,YAAY,oBACZC,MAAOkB,EACPf,SAAUA,EACV1B,UAAU,eAGd,sBAAKA,UAAU,cAAf,UACE,uBACE0C,KAAK,SACLM,GAAG,SACH3B,KAAK,WACLK,SAAUA,EACV8C,QAASb,IAEX,uBAAOc,QAAQ,SAAf,uCAEF,wBAAQzE,UAAU,yBAAyBqB,KAAK,SAAhD,SACGsC,EAAS,UAAY,mBCnG1Be,EAAcC,wBAAc,IAE5BC,EAAaC,sBAEZ,SAASC,EAAT,GAAqE,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,kBAAmBC,EAAY,EAAZA,SAAY,EACjDvE,wBAASwE,GADwC,mBAClEC,EADkE,KAC5DC,EAD4D,KAGzEC,8BAAoBT,GAAY,kBAAOO,EAAOA,EAAKG,WAAQJ,KAE3DK,qBAAU,WACRP,EAAkBQ,QAAO,SAACC,GACxBC,QAAQC,IAAIF,GACZL,OAAQF,QAET,CAACF,IAEJO,qBAAU,WACRR,EAAYa,KAAK1E,KAAKkE,GAAShE,MAAMsE,QAAQpB,SAC5C,CAACS,IAEJ,IAAMc,EAASC,sBAAW,uCACxB,WAAOlG,EAAUkE,EAAUpB,EAAMuB,EAAOxB,GAAxC,SAAA1B,EAAA,+EACEgE,EACGpB,OAAO/D,EAAUkE,EAAUpB,EAAMuB,EAAOxB,GACxCvB,MAAK,SAACiE,GAAD,OAAUC,EAAQD,OAH5B,2CADwB,8DAKxB,CAACJ,IAGGgB,EAAQD,sBAAW,uCACvB,WAAOlG,EAAUkE,GAAjB,SAAA/C,EAAA,+EACEgE,EAAYiB,MAAMpG,EAAUkE,GAAU5C,MAAK,SAACiE,GAAD,OAAUC,EAAQD,OAD/D,2CADuB,wDAGvB,CAACJ,IAGGkB,EAASH,sBAAW,sBACxB,sBAAA/E,EAAA,+EAAYgE,EAAYkB,SAAS/E,MAAK,kBAAMkE,OAAQF,OAApD,2CACA,CAACH,IAGGmB,EAAUC,mBACd,iBAAO,CACLhB,OACAU,SACAE,QACAE,YAEF,CAACd,EAAMU,EAAQE,EAAOE,IAGxB,OACE,cAACvB,EAAY0B,SAAb,CAAsB7E,MAAO2E,EAA7B,SACGf,EACCF,EAEA,sBAAKjF,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOyD,SAAUoC,EAAQnC,QAASqC,SAOrC,IAAMM,EAAb,sFACE,SAAOC,GACLC,KAAKD,SAAWA,IAFpB,oBAIE,SAAOhC,GACLiC,KAAKD,SAAShC,OALlB,KAWakC,EAAU,kBAAMC,qBAAW/B,ICRzBgC,EAxEA/G,gBAAK,YAA0C,IAAvCa,EAAsC,EAAtCA,aAAcZ,EAAwB,EAAxBA,SAAU+G,EAAc,EAAdA,QAAc,EAC/BjG,mBAAS,IADsB,mBACpDkG,EADoD,KAC5CC,EAD4C,OAEjCnG,mBAAS,IAFwB,mBAEpD4D,EAFoD,KAE7CD,EAF6C,KAGrDyC,EAAUC,cACR5B,EAASqB,IAATrB,KAERI,qBAAU,WACR/E,EACGwG,UAAUpH,GACVsB,MAAK,SAAC0F,GAAD,OAAYC,EAAU,YAAID,OAC/BxF,MAAMX,GACP,IAAMwG,EAAWzG,EAAa0G,QAAO,SAAAvG,GAAK,OAAIwG,EAAUxG,MACxD,OAAO,kBAAMsG,OACd,CAACzG,EAAcZ,EAAUuF,IAE5B,IAAMgC,EAAY,SAACxG,GACjBkG,GAAU,SAACD,GAAD,OAAajG,GAAb,mBAAuBiG,QAG7BzD,EAAW,SAACiE,GAAD,OACf5G,EACG6G,YAAYD,GACZlG,MAAK,kBACJ2F,GAAU,SAACD,GAAD,OAAYA,EAAOU,QAAO,SAAC3G,GAAD,OAAWA,EAAMqC,KAAOoE,WAE7DhG,OAAM,SAACkD,GAAD,OAAWD,EAASC,EAAMC,gBAE/B1B,EAAW,SAACuE,EAAS/G,GAAV,OACfG,EACG+G,YAAYH,EAAS/G,GACrBa,MAAK,SAACsG,GAAD,OACJX,GAAU,SAACD,GAAD,OACRA,EAAOa,KAAI,SAACC,GAAD,OAAWA,EAAK1E,KAAOwE,EAAQxE,GAAKwE,EAAUE,WAG5DtG,OAAM,SAACkD,GAAD,OAAWA,EAAMC,eAEtBnB,EAAkB,SAACzC,GAAD,OAAWmG,EAAQa,KAAR,WAAiBhH,EAAMf,YAEpDa,EAAU,SAAC6D,GACfD,EAASC,EAAMC,YACfqD,YAAW,WACTvD,EAAS,MACR,MAGL,OACE,qCACGsC,GACC,cAAC,EAAD,CACEnG,aAAcA,EACdC,QAASA,EACT0G,UAAWA,IAGd7C,GAAS,cAAC,EAAD,CAAQjE,KAAMiE,EAAOhE,SAAS,EAAMuH,WAAW,IACtC,IAAlBjB,EAAOkB,QAAgB,mBAAG9H,UAAU,eAAb,2BACxB,oBAAIA,UAAU,SAAd,SACG4G,EAAOa,KAAI,SAAC9G,GAAD,OACV,cAAC,EAAD,CAEEA,MAAOA,EACPuC,MAAOvC,EAAMf,WAAauF,EAAKvF,SAC/BuD,SAAUA,EACVN,SAAUA,EACVO,gBAAiBA,GALZzC,EAAMqC,eC5DR+E,EAJG,SAAC,GAAD,IAAGvH,EAAH,EAAGA,aAAH,OAChB,cAAC,EAAD,CAAQA,aAAcA,EAAcmG,SAAS,KCOhCqB,EAPE,SAAC,GAAsB,IAApBxH,EAAmB,EAAnBA,aACVZ,EAAaqI,cAAbrI,SACR,OACE,cAAC,EAAD,CAAQY,aAAcA,EAAcZ,SAAUA,EAAU+G,SAAS,KC0CtDuB,MA3Cf,YAAgC,IAAjB1H,EAAgB,EAAhBA,aACPsG,EAAUC,cADa,EAEJP,IAAjBrB,EAFqB,EAErBA,KAAMc,EAFe,EAEfA,OAiBd,OACE,sBAAKjG,UAAU,MAAf,UACE,cAAC,EAAD,CACEJ,SAAUuF,EAAKvF,SACfC,SAXW,WACXsI,OAAOC,QAAQ,6BACjBnC,IACAa,EAAQa,KAAK,OASX5H,YApBc,WAClB+G,EAAQa,KAAK,MAoBT7H,WAjBa,WACjBgH,EAAQa,KAAR,WAAiBxC,EAAKvF,cAkBpB,eAAC,IAAD,eAEE,qCACE,cAAC,IAAD,CAAOyI,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAW9H,aAAcA,MAE3B,cAAC,IAAD,CAAO6H,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,EAAD,CAAU9H,aAAcA,SAP9B,WCjCe+H,E,WACnB,WAAYC,EAAMC,GAAe,oBAC/BlC,KAAKiC,KAAOA,EACZjC,KAAKkC,aAAeA,E,iFAGtB,WAAa7I,EAAUkE,EAAUpB,EAAMuB,EAAOxB,GAA9C,eAAA1B,EAAA,sEACyBwF,KAAKiC,KAAKE,MAAM,eAAgB,CACrDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAClJ,WAAUkE,WAAUpB,OAAMuB,QAAOxB,UAH3D,cACQsG,EADR,OAMExC,KAAKkC,aAAaO,UAAUD,EAASzD,OANvC,kBAOSyD,GAPT,gD,yHAUA,WAAYnJ,EAAUkE,GAAtB,eAAA/C,EAAA,sEACyBwF,KAAKiC,KAAKE,MAAM,cAAe,CACpDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAClJ,WAAUkE,eAHpC,cACQiF,EADR,OAMExC,KAAKkC,aAAaO,UAAUD,EAASzD,OANvC,kBAOSyD,GAPT,gD,gHAWA,4BAAAhI,EAAA,sEACsBwF,KAAKkC,aAAaQ,WADxC,cACQ3D,EADR,yBAESiB,KAAKiC,KAAKE,MAAM,WAAY,CACjCC,OAAQ,MACRO,QAAS,CAAEC,cAAc,UAAD,OAAY7D,OAJxC,gD,iHAQA,sBAAAvE,EAAA,sDACEwF,KAAKkC,aAAaW,aADpB,gD,6DCnCmBC,E,WACnB,WAAYb,EAAMC,EAAca,GAAS,oBACvC/C,KAAKiC,KAAOA,EACZjC,KAAKkC,aAAeA,EACpBlC,KAAK+C,OAASA,E,oFAGhB,WAAgB1J,GAAhB,eAAAmB,EAAA,6DACQwI,EAAQ3J,EAAQ,oBAAgBA,GAAa,GADrD,kBAES2G,KAAKiC,KAAKE,MAAV,iBAA0Ba,GAAS,CACxCZ,OAAQ,MACRO,QAAS3C,KAAKiD,gBAJlB,gD,qHAQA,WAAgBnJ,GAAhB,SAAAU,EAAA,+EACSwF,KAAKiC,KAAKE,MAAV,UAA2B,CAChCC,OAAQ,OACRO,QAAS3C,KAAKiD,aACdZ,KAAMC,KAAKC,UAAU,CAACzI,YAJ1B,gD,uHAQA,WAAkB+G,GAAlB,SAAArG,EAAA,+EACSwF,KAAKiC,KAAKE,MAAV,kBAA2BtB,GAAW,CAC3C8B,QAAS3C,KAAKiD,aACdb,OAAQ,YAHZ,gD,uHAOA,WAAkBvB,EAAS/G,GAA3B,SAAAU,EAAA,+EACSwF,KAAKiC,KAAKE,MAAV,kBAA2BtB,GAAW,CAC3CuB,OAAQ,MACRO,QAAS3C,KAAKiD,aACdZ,KAAMC,KAAKC,UAAU,CAACzI,YAJ1B,gD,iFAQA,WACE,IAAMiF,EAAQiB,KAAKkC,aAAaQ,WAChC,MAAO,CACLE,cAAc,UAAD,OAAY7D,M,oBAI7B,SAAOgB,GACL,OAAOC,KAAK+C,OAAOpC,OAAO,SAAUZ,O,qBC9CnBmD,E,WACjB,WAAYC,EAAS1E,GAAoB,oBACrCuB,KAAKmD,QAAUA,EACfnD,KAAKvB,kBAAoBA,E,gMAG7B,WAAYvC,EAAKkH,GAAjB,qBAAA5I,EAAA,sEAC2B2H,MAAM,GAAD,OAAInC,KAAKmD,SAAT,OAAmBjH,GAAnB,YAAC,eACtBkH,GADqB,IAExBT,QAAQ,aACJ,eAAgB,oBACbS,EAAQT,YALvB,cACUH,EADV,yBAWqBA,EAASa,OAX9B,OAWQC,EAXR,uDAaQnE,QAAQpB,MAAR,MAbR,aAeOyE,EAASe,OAAS,KAAOf,EAASe,OAAS,KAflD,oBAgBcC,EAAUF,GAAQA,EAAKE,QAAUF,EAAKE,QAAU,uBAChDzF,EAAQ,IAAI0F,MAAMD,GACA,MAApBhB,EAASe,OAlBrB,wBAmBYvD,KAAKvB,kBAAkBiF,OAAO3F,GAnB1C,iCAsBcA,EAtBd,iCAwBWuF,GAxBX,yD,iECNEK,EAAQ,QAEOC,E,yFACjB,SAAU7E,GACN8E,aAAaC,QAAQH,EAAO5E,K,sBAGhC,WACI,OAAO8E,aAAaE,QAAQJ,K,wBAGhC,WACIE,aAAaG,MAAML,O,aCVNM,E,WACjB,WAAYd,EAASe,GAAgB,oBACjClE,KAAKmE,GAAKpB,YAAOI,EAAS,CACtBiB,KAAM,SAACC,GAAD,OAAQA,EAAG,CAAEtF,MAAOmF,SAG9BlE,KAAKmE,GAAGG,GAAG,iBAAiB,SAAApF,GACxBC,QAAQC,IAAI,eAAgBF,EAAIsE,Y,0CAIxC,SAAOjJ,EAAOwF,GAAW,IAAD,OAMpB,OALKC,KAAKmE,GAAGI,WACTvE,KAAKmE,GAAGK,UAGZxE,KAAKmE,GAAGG,GAAG/J,GAAO,SAACiJ,GAAD,OAAazD,EAASyD,MACjC,kBAAM,EAAKW,GAAGM,IAAIlK,Q,KCN3B4I,EAAUuB,4DACVjG,EAAoB,IAAIqB,EACxB6E,EAAa,IAAIzB,EAAWC,EAAS1E,GACrCyD,EAAe,IAAI0B,EACnBpF,EAAc,IAAIwD,EAAY2C,EAAYzC,GAC1C0C,EAAe,IAAIX,EAAOd,GAAS,kBAAMjB,EAAaQ,cACtDzI,EAAe,IAAI6I,EAAa6B,EAAYzC,EAAc0C,GAEhEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAACxG,EAAD,CACEC,YAAaA,EACbC,kBAAmBA,EAFrB,SAIE,cAAC,EAAD,CAAKxE,aAAcA,UAIzB+K,SAASC,eAAe,W","file":"static/js/main.a0b2c19b.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\n\r\nconst Header = memo(({ username, onLogout, onMyTweets, onAllTweets }) => {\r\n  return (\r\n    <header className='header'>\r\n      <div className='logo'>\r\n        <img src='./img/logo.png' alt='Dwitter Logo' className='logo-img' />\r\n        <h1 className='logo-name'>5bitter</h1>\r\n        {username && <span className='logo-user'>@{username}</span>}\r\n      </div>\r\n      {username && (\r\n        <nav className='menu'>\r\n          <button onClick={onAllTweets}>All Tweets</button>\r\n          <button onClick={onMyTweets}>My Tweets</button>\r\n          <button className='menu-item' onClick={onLogout}>\r\n            Logout\r\n          </button>\r\n        </nav>\r\n      )}\r\n    </header>\r\n  );\r\n});\r\n\r\nexport default Header;\r\n","import React, { memo } from 'react';\r\n\r\nconst Banner = memo(({ text, isAlert }) => (\r\n  <>\r\n    {text && (\r\n      <p className={`banner ${isAlert ? 'banner-red' : 'banner-green'}`}>\r\n        {text}\r\n      </p>\r\n    )}\r\n  </>\r\n));\r\nexport default Banner;\r\n","import React, { useState } from 'react';\r\n\r\nconst NewTweetForm = ({ tweetService, onError }) => {\r\n  const [tweet, setTweet] = useState('');\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    tweetService\r\n      .postTweet(tweet)\r\n      .then((created) => {\r\n        setTweet('');\r\n      })\r\n      .catch(onError);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setTweet(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className='tweet-form' onSubmit={onSubmit}>\r\n      <input\r\n        type='text'\r\n        placeholder='Edit your tweet'\r\n        value={tweet}\r\n        required\r\n        autoFocus\r\n        onChange={onChange}\r\n        className='form-input tweet-input'\r\n      />\r\n      <button type='submit' className='form-btn'>\r\n        Post\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTweetForm;\r\n","export default function parseDate(tdate) {\r\n  const created = new Date(Date.parse(tdate));\r\n  const now = new Date();\r\n  const diff = Math.floor((now - created) / 1000);\r\n  if (diff <= 1) {\r\n    return 'just now';\r\n  }\r\n  if (diff < 20) {\r\n    return diff + ' seconds ago';\r\n  }\r\n  if (diff < 40) {\r\n    return 'half a minute ago';\r\n  }\r\n  if (diff < 60) {\r\n    return 'less than a minute ago';\r\n  }\r\n  if (diff <= 90) {\r\n    return 'one minute ago';\r\n  }\r\n  if (diff <= 3540) {\r\n    return Math.round(diff / 60) + ' minutes ago';\r\n  }\r\n  if (diff <= 5400) {\r\n    return '1 hour ago';\r\n  }\r\n  if (diff <= 86400) {\r\n    return Math.round(diff / 3600) + ' hours ago';\r\n  }\r\n  if (diff <= 129600) {\r\n    return '1 day ago';\r\n  }\r\n  if (diff < 604800) {\r\n    return Math.round(diff / 86400) + ' days ago';\r\n  }\r\n  if (diff <= 777600) {\r\n    return '1 week ago';\r\n  }\r\n  const month = created.toLocaleDateString('default', { month: 'long' });\r\n  return `on ${month} ${created.getDate()}`;\r\n}\r\n","import React, { memo } from 'react';\r\n\r\nconst Avatar = memo(({ url, name }) => (\r\n  <div>\r\n    {!!url ? (\r\n      <img src={url} alt='avatar' className='avatar-img' />\r\n    ) : (\r\n      <div className='avatar-txt'>{name.charAt(0)}</div>\r\n    )}\r\n  </div>\r\n));\r\n\r\nexport default Avatar;\r\n","import React, { useState } from 'react';\r\n\r\nconst EditTweetForm = ({ tweet, onUpdate, onClose }) => {\r\n  const [text, setText] = useState(tweet.text);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    onUpdate(tweet.id, text);\r\n    onClose();\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className='edit-tweet-form' onSubmit={onSubmit}>\r\n      <input\r\n        type='text'\r\n        placeholder='Edit your tweet'\r\n        value={text}\r\n        required\r\n        autoFocus\r\n        onChange={onChange}\r\n        className='form-input tweet-input'\r\n      />\r\n      <div className='edit-tweet-form-action'>\r\n        <button type='submit' className='form-btn-update'>\r\n          Update\r\n        </button>\r\n        <button type='button' className='form-btn-cancel' onClick={onClose}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditTweetForm;\r\n","import React, { memo, useState } from 'react';\r\nimport parseDate from '../util/date';\r\nimport Avatar from './Avatar';\r\nimport EditTweetForm from './EditTweetForm';\r\n\r\nconst TweetCard = memo(\r\n  ({ tweet, owner, onDelete, onUpdate, onUsernameClick }) => {\r\n    const { id, username, name, url, text, createdAt } = tweet;\r\n    const [editing, setEditing] = useState(false);\r\n    const onClose = () => setEditing(false);\r\n\r\n    return (\r\n      <li className='tweet'>\r\n        <section className='tweet-container'>\r\n          <Avatar url={url} name={name} />\r\n          <div className='tweet-body'>\r\n            <span className='tweet-name'>{name}</span>\r\n            <span\r\n              className='tweet-username'\r\n              onClick={() => onUsernameClick(tweet)}\r\n            >\r\n              @{username}\r\n            </span>\r\n            <span className='tweet-date'> · {parseDate(createdAt)}</span>\r\n            <p>{text}</p>\r\n            {editing && (\r\n              <EditTweetForm\r\n                tweet={tweet}\r\n                onUpdate={onUpdate}\r\n                onClose={onClose}\r\n              />\r\n            )}\r\n          </div>\r\n        </section>\r\n        {owner && (\r\n          <div className='tweet-action'>\r\n            <button className='tweet-action-btn' onClick={() => onDelete(id)}>\r\n              x\r\n            </button>\r\n            <button\r\n              className='tweet-action-btn'\r\n              onClick={() => setEditing(true)}\r\n            >\r\n              ✎\r\n            </button>\r\n          </div>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n);\r\nexport default TweetCard;\r\n","import React, { useState } from 'react';\r\nimport Banner from '../components/Banner';\r\n\r\nconst Login = ({ onSignUp, onLogin }) => {\r\n  const [signup, setSignup] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [url, setURL] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [isAlert, setIsAlert] = useState(false);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (signup) {\r\n      onSignUp(username, password, name, email, url).catch(setError);\r\n    } else {\r\n      onLogin(username, password).catch(setError);\r\n    }\r\n  };\r\n\r\n  const setError = (error) => {\r\n    setText(error.toString());\r\n    setIsAlert(true);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value, checked },\r\n    } = event;\r\n    switch (name) {\r\n      case 'username':\r\n        return setUsername(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'url':\r\n        return setURL(value);\r\n      case 'signup':\r\n        return setSignup(checked);\r\n      default:\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Banner text={text} isAlert={isAlert} />\r\n      <form className='auth-form' onSubmit={onSubmit}>\r\n        <input\r\n          name='username'\r\n          type='text'\r\n          placeholder='Id'\r\n          value={username}\r\n          onChange={onChange}\r\n          className='form-input'\r\n          required\r\n        />\r\n        <input\r\n          name='password'\r\n          type='password'\r\n          placeholder='Password'\r\n          value={password}\r\n          className='form-input'\r\n          onChange={onChange}\r\n        />\r\n        {signup && (\r\n          <input\r\n            name='name'\r\n            type='text'\r\n            placeholder='Name'\r\n            value={name}\r\n            onChange={onChange}\r\n            className='form-input'\r\n            required\r\n          />\r\n        )}\r\n        {signup && (\r\n          <input\r\n            name='email'\r\n            type='email'\r\n            placeholder='Email'\r\n            value={email}\r\n            onChange={onChange}\r\n            className='form-input'\r\n            required\r\n          />\r\n        )}\r\n        {signup && (\r\n          <input\r\n            name='url'\r\n            type='url'\r\n            placeholder='Profile Image URL'\r\n            value={url}\r\n            onChange={onChange}\r\n            className='form-input'\r\n          />\r\n        )}\r\n        <div className='form-signup'>\r\n          <input\r\n            name='signup'\r\n            id='signup'\r\n            type='checkbox'\r\n            onChange={onChange}\r\n            checked={signup}\r\n          />\r\n          <label htmlFor='signup'> Create a new account?</label>\r\n        </div>\r\n        <button className='form-btn auth-form-btn' type='submit'>\r\n          {signup ? 'Sign Up' : 'Sign In'}\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n  createContext,\r\n  createRef,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport Header from '../components/Header';\r\nimport Login from '../pages/Login';\r\n\r\nconst AuthContext = createContext({});\r\n\r\nconst contextRef = createRef();\r\n\r\nexport function AuthProvider({ authService, authErrorEventBus, children }) {\r\n  const [user, setUser] = useState(undefined);\r\n\r\n  useImperativeHandle(contextRef, () => (user ? user.token : undefined));\r\n\r\n  useEffect(() => {\r\n    authErrorEventBus.listen((err) => {\r\n      console.log(err);\r\n      setUser(undefined);\r\n    });\r\n  }, [authErrorEventBus]);\r\n\r\n  useEffect(() => {\r\n    authService.me().then(setUser).catch(console.error);\r\n  }, [authService]);\r\n\r\n  const signUp = useCallback(\r\n    async (username, password, name, email, url) =>\r\n      authService\r\n        .signup(username, password, name, email, url)\r\n        .then((user) => setUser(user)),\r\n    [authService]\r\n  );\r\n\r\n  const logIn = useCallback(\r\n    async (username, password) =>\r\n      authService.login(username, password).then((user) => setUser(user)),\r\n    [authService]\r\n  );\r\n\r\n  const logout = useCallback(\r\n    async () => authService.logout().then(() => setUser(undefined)),\r\n    [authService]\r\n  );\r\n\r\n  const context = useMemo(\r\n    () => ({\r\n      user,\r\n      signUp,\r\n      logIn,\r\n      logout,\r\n    }),\r\n    [user, signUp, logIn, logout]\r\n  );\r\n\r\n  return (\r\n    <AuthContext.Provider value={context}>\r\n      {user ? (\r\n        children\r\n      ) : (\r\n        <div className='app'>\r\n          <Header />\r\n          <Login onSignUp={signUp} onLogin={logIn} />\r\n        </div>\r\n      )}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport class AuthErrorEventBus {\r\n  listen(callback) {\r\n    this.callback = callback;\r\n  }\r\n  notify(error) {\r\n    this.callback(error);\r\n  }\r\n}\r\n\r\nexport default AuthContext;\r\nexport const fetchToken = () => contextRef.current;\r\nexport const useAuth = () => useContext(AuthContext);\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Banner from './Banner';\r\nimport NewTweetForm from './NewTweetForm';\r\nimport TweetCard from './TweetCard';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst Tweets = memo(({ tweetService, username, addable }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const history = useHistory();\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    tweetService\r\n      .getTweets(username)\r\n      .then((tweets) => setTweets([...tweets]))\r\n      .catch(onError);\r\n      const stopSync = tweetService.onSync(tweet => onCreated(tweet));\r\n      return () => stopSync();\r\n  }, [tweetService, username, user]);\r\n\r\n  const onCreated = (tweet) => {\r\n    setTweets((tweets) => [tweet, ...tweets]);\r\n  };\r\n\r\n  const onDelete = (tweetId) =>\r\n    tweetService\r\n      .deleteTweet(tweetId)\r\n      .then(() =>\r\n        setTweets((tweets) => tweets.filter((tweet) => tweet.id !== tweetId))\r\n      )\r\n      .catch((error) => setError(error.toString()));\r\n\r\n  const onUpdate = (tweetId, text) =>\r\n    tweetService\r\n      .updateTweet(tweetId, text)\r\n      .then((updated) =>\r\n        setTweets((tweets) =>\r\n          tweets.map((item) => (item.id === updated.id ? updated : item))\r\n        )\r\n      )\r\n      .catch((error) => error.toString());\r\n\r\n  const onUsernameClick = (tweet) => history.push(`/${tweet.username}`);\r\n\r\n  const onError = (error) => {\r\n    setError(error.toString());\r\n    setTimeout(() => {\r\n      setError('');\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {addable && (\r\n        <NewTweetForm\r\n          tweetService={tweetService}\r\n          onError={onError}\r\n          onCreated={onCreated}\r\n        />\r\n      )}\r\n      {error && <Banner text={error} isAlert={true} transient={true} />}\r\n      {tweets.length === 0 && <p className='tweets-empty'>No Tweets Yet</p>}\r\n      <ul className='tweets'>\r\n        {tweets.map((tweet) => (\r\n          <TweetCard\r\n            key={tweet.id}\r\n            tweet={tweet}\r\n            owner={tweet.username === user.username}\r\n            onDelete={onDelete}\r\n            onUpdate={onUpdate}\r\n            onUsernameClick={onUsernameClick}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n});\r\nexport default Tweets;\r\n","import React from 'react';\r\nimport Tweets from '../components/Tweets';\r\n\r\nconst AllTweets = ({ tweetService }) => (\r\n  <Tweets tweetService={tweetService} addable={true} />\r\n);\r\n\r\nexport default AllTweets;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Tweets from '../components/Tweets';\r\n\r\nconst MyTweets = ({ tweetService }) => {\r\n  const { username } = useParams();\r\n  return (\r\n    <Tweets tweetService={tweetService} username={username} addable={false} />\r\n  );\r\n};\r\n\r\nexport default MyTweets;\r\n","import { Switch, Route, useHistory } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport AllTweets from './pages/AllTweets';\r\nimport MyTweets from './pages/MyTweets';\r\nimport { useAuth } from './context/AuthContext';\r\n\r\nfunction App({ tweetService }) {\r\n  const history = useHistory();\r\n  const { user, logout } = useAuth();\r\n\r\n  const onAllTweets = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  const onMyTweets = () => {\r\n    history.push(`/${user.username}`);\r\n  };\r\n\r\n  const onLogout = () => {\r\n    if (window.confirm('Do you want to log out?')) {\r\n      logout();\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='app'>\r\n      <Header\r\n        username={user.username}\r\n        onLogout={onLogout}\r\n        onAllTweets={onAllTweets}\r\n        onMyTweets={onMyTweets}\r\n      />\r\n      <Switch>\r\n        (\r\n        <>\r\n          <Route exact path='/'>\r\n            <AllTweets tweetService={tweetService} />\r\n          </Route>\r\n          <Route exact path='/:username'>\r\n            <MyTweets tweetService={tweetService} />\r\n          </Route>\r\n        </>\r\n        )\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default class AuthService {\r\n  constructor(http, tokenStorage) {\r\n    this.http = http;\r\n    this.tokenStorage = tokenStorage;\r\n  }\r\n\r\n  async signup(username, password, name, email, url) {\r\n    const response = await this.http.fetch('/auth/signup', {\r\n      method: 'POST',\r\n      body: JSON.stringify({username, password, name, email, url}),\r\n    })\r\n    \r\n    this.tokenStorage.saveToken(response.token);  \r\n    return response;\r\n  }\r\n\r\n  async login(username, password) {\r\n    const response = await this.http.fetch('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({username, password}),\r\n    })\r\n\r\n    this.tokenStorage.saveToken(response.token);\r\n    return response;\r\n  }\r\n\r\n\r\n  async me() {\r\n    const token = await this.tokenStorage.getToken();\r\n    return this.http.fetch('/auth/me', {\r\n      method: 'GET',\r\n      headers: { Authorization: `Bearer ${token}`},\r\n    })\r\n  }\r\n\r\n  async logout() {\r\n    this.tokenStorage.clearToken();\r\n  }\r\n\r\n}","export default class TweetService {\r\n  constructor(http, tokenStorage, socket) {\r\n    this.http = http;\r\n    this.tokenStorage = tokenStorage;\r\n    this.socket = socket;\r\n  }\r\n\r\n  async getTweets(username) {\r\n    const query = username ? `?username=${username}` : '';\r\n    return this.http.fetch(`/tweets${query}`, {\r\n      method: 'GET',\r\n      headers: this.getHeaders(),\r\n    })\r\n  }\r\n\r\n  async postTweet(text) {\r\n    return this.http.fetch(`/tweets`, {\r\n      method: 'POST',\r\n      headers: this.getHeaders(),\r\n      body: JSON.stringify({text}),\r\n    })\r\n  }\r\n\r\n  async deleteTweet(tweetId) {\r\n    return this.http.fetch(`/tweets/${tweetId}`, {\r\n      headers: this.getHeaders(),\r\n      method: 'DELETE',\r\n    })\r\n  }\r\n\r\n  async updateTweet(tweetId, text) {\r\n    return this.http.fetch(`/tweets/${tweetId}`, {\r\n      method: 'PUT',\r\n      headers: this.getHeaders(),\r\n      body: JSON.stringify({text}),\r\n    })\r\n  }\r\n\r\n  getHeaders() {\r\n    const token = this.tokenStorage.getToken();\r\n    return {\r\n      Authorization: `Bearer ${token}`,\r\n    }\r\n  }\r\n\r\n  onSync(callback) {\r\n    return this.socket.onSync('tweets', callback);\r\n  }\r\n}\r\n","export default class HttpClient {\r\n    constructor(baseURL, authErrorEventBus) {\r\n        this.baseURL = baseURL;\r\n        this.authErrorEventBus = authErrorEventBus;\r\n    }\r\n\r\n    async fetch(url, options) {\r\n        const response = await fetch(`${this.baseURL}${url}`, {\r\n            ...options,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                ...options.headers,\r\n            },\r\n            \r\n        })\r\n        let data;\r\n        try {\r\n            data = await response.json();\r\n        } catch(error) {\r\n            console.error(error);\r\n        }\r\n        if(response.status > 299 || response.status < 200) {\r\n            const message = data && data.message ? data.message : 'Someting went wrong!'\r\n            const error = new Error(message);\r\n            if (response.status === 401) {\r\n                this.authErrorEventBus.notify(error);\r\n                return ;\r\n            }\r\n            throw error;\r\n        }\r\n        return data;\r\n    }\r\n}","const TOKEN = 'token';\r\n\r\nexport default class TokenStorage {\r\n    saveToken(token) {\r\n        localStorage.setItem(TOKEN, token);\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem(TOKEN);\r\n    }\r\n\r\n    clearToken() {\r\n        localStorage.clear(TOKEN);\r\n    }\r\n}","import socket from 'socket.io-client';\r\n\r\nexport default class Socket {\r\n    constructor(baseURL, getAcessToken) {\r\n        this.io = socket(baseURL, {\r\n            auth: (cb) => cb({ token: getAcessToken() }),\r\n        })\r\n\r\n        this.io.on('connect_error', err => {\r\n            console.log('socket error', err.message);\r\n        })\r\n    }\r\n\r\n    onSync(event, callback) {\r\n        if (!this.io.connected) {\r\n            this.io.connect();\r\n        }\r\n\r\n        this.io.on(event, (message) => callback(message));\r\n        return () => this.io.off(event);\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport AuthService from './service/auth';\r\nimport TweetService from './service/tweet';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { AuthProvider } from './context/AuthContext';\r\nimport { AuthErrorEventBus } from './context/AuthContext';\r\nimport HttpClient from './network/http';\r\nimport TokenStorage from './db/token';\r\nimport Socket from './network/socket.js'\r\n\r\nconst baseURL = process.env.REACT_APP_BASE_URL;\r\nconst authErrorEventBus = new AuthErrorEventBus();\r\nconst httpClient = new HttpClient(baseURL, authErrorEventBus);\r\nconst tokenStorage = new TokenStorage();\r\nconst authService = new AuthService(httpClient, tokenStorage);\r\nconst socketClient = new Socket(baseURL, () => tokenStorage.getToken());\r\nconst tweetService = new TweetService(httpClient, tokenStorage, socketClient);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <AuthProvider\r\n        authService={authService}\r\n        authErrorEventBus={authErrorEventBus}\r\n      >\r\n        <App tweetService={tweetService} />\r\n      </AuthProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}